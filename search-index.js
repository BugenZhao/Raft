var searchIndex = JSON.parse('{\
"labcodec":{"doc":"A thin wrapper of prost","t":[6,6,8,5,5],"n":["DecodeError","EncodeError","Message","decode","encode"],"q":["labcodec","","","",""],"d":["A message decoding error.","A message encoding error.","A labcodec message.","Decodes an message from the buffer.","Encodes the message to a <code>Vec&lt;u8&gt;</code>."],"i":[0,0,0,0,0],"f":[null,null,null,[[],[["result",4,["decodeerror"]],["message",8],["decodeerror",6]]],[[["vec",3]],[["encodeerror",6],["result",4,["encodeerror"]]]]],"p":[]},\
"labrpc":{"doc":"","t":[3,13,13,4,6,8,3,13,13,6,3,6,8,3,3,13,13,13,10,10,0,12,12,12,0,12,10,12,12,0,12,12,0,12,12,12,0,14,12,12,12,12,12,12,12,3,3,8,10,10,11,11,11,11,11,11,12,11,11,11,12,11,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,13,13,4,13,13,6,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,5,11,12,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,6,8,7,6,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,10,12,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","Decode","Encode","Error","Handler","HandlerFactory","Network","Other","Recv","Result","Rpc","RpcFuture","RpcHooks","Server","ServerBuilder","Stopped","Timeout","Unimplemented","after_dispatch","before_dispatch","client","client_name","core","core","error","fq_name","handler","hooks","hooks","macros","name","name","network","req","resp","sender","server","service","services","worker","0","0","0","0","0","Client","Rpc","RpcHooks","after_dispatch","before_dispatch","borrow","borrow","borrow_mut","borrow_mut","call","clear_hooks","client_name","clone","clone_into","fmt","fq_name","from","from","hooks","hooks","into","into","name","req","resp","sender","set_hooks","take_resp_sender","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","worker","Decode","Encode","Error","Other","Recv","Result","Stopped","Timeout","Unimplemented","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","into","ne","source","to_owned","to_string","try_from","try_into","type_id","vzip","0","0","0","0","0","EndInfo","Endpoints","Network","NetworkCore","add_server","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect","connections","core","count","count","create","create_client","delete_server","enable","enabled","enabled","end_info","endpoints","fmt","from","from","from","from","into","into","into","into","is_server_dead","long_delays","long_reordering","long_reordering","new","poller","process_rpc","process_rpc","reliable","reliable","sender","server","server_dead","servers","set_long_delays","set_long_reordering","set_reliable","spawn","spawn_poller","start","to_owned","total_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","worker","Handler","HandlerFactory","ID_ALLOC","RpcFuture","Server","ServerBuilder","ServerCore","add_service","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","core","count","count","dispatch","fmt","from","from","from","handler","id","into","into","into","name","name","name","new","services","services","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["labrpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","labrpc::Error","","","","","labrpc::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","labrpc::error","","","","","","","","","","","","","","","","","","","","","","","","","","labrpc::error::Error","","","","","labrpc::network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","labrpc::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connects a Client to a server. a Client can only be …","","","","","","","","Enable/disable a Client.","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the specified server killed.","","","","","Spawns a future to run on this net framework.","Spawns a future to run on this net framework.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,2,2,0,3,4,5,0,3,6,3,7,0,8,7,0,3,3,7,0,0,8,7,9,10,11,12,13,0,0,0,2,2,3,7,3,7,7,7,3,7,7,3,3,3,7,3,7,3,7,7,3,3,7,7,3,7,3,7,3,7,3,7,3,7,7,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,10,11,12,13,0,0,0,0,4,14,15,16,4,14,15,16,4,4,4,4,14,4,4,15,4,4,4,4,14,16,4,15,16,14,15,16,4,14,15,16,4,4,15,15,16,4,15,0,4,15,16,15,16,0,14,4,4,4,4,4,4,4,4,14,15,16,4,14,15,16,4,14,15,16,4,14,15,16,4,15,0,0,0,0,0,0,0,8,8,17,5,8,17,5,8,5,5,5,5,17,5,5,8,17,5,6,17,8,17,5,5,8,17,8,8,17,5,8,17,5,8,17,5,8,17,5,8,17,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["result",6,["vec"]],["str",15],["vec",3,["u8"]]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["str",15]],["result",6]],null,null,null,null,null,null,[[["str",15]],[["handler",6],["box",3,["handler"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["result",6,["vec"]],["str",15],["vec",3,["u8"]]],[["result",6,["vec"]],["vec",3,["u8"]]]],[[["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["result",6],["rpcfuture",6,["result"]]]],[[]],null,[[],["client",3]],[[]],[[["formatter",3]],["result",6]],null,[[]],[[]],null,null,[[]],[[]],null,null,null,null,[[["arc",3,["rpchooks"]],["rpchooks",8]]],[[],[["sender",3,["result"]],["option",4,["sender"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",4]],["bool",15]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["server",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["network",3]],[[]],[[["str",15]]],null,null,[[["str",15]],["usize",15]],null,[[]],[[["string",3]],["client",3]],[[["str",15]]],[[["str",15],["bool",15]]],null,null,[[["str",15]],["endinfo",3]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["str",15]],["bool",15]],null,null,null,[[],["network",3]],null,[[["u64",15],["option",4,["u64"]],["bool",15],["network",3],["rpc",3],["server",3]]],[[["rpc",3]]],null,null,null,null,[[["usize",15],["network",3],["str",15],["duration",3]]],null,[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[["rpc",3],["unboundedreceiver",3,["rpc"]]]],[[]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["box",3,["handlerfactory"]],["handlerfactory",8],["str",15]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["server",3]],[[],["server",3]],[[]],null,[[],["usize",15]],null,[[["str",15]],[["result",6,["vec"]],["rpcfuture",6,["result"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["str",15]],[["handler",6],["box",3,["handler"]]]],null,[[]],[[]],[[]],[[],["str",15]],null,null,[[["string",3]],["serverbuilder",3]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[4,"Error"],[8,"RpcHooks"],[3,"Rpc"],[3,"Network"],[3,"Server"],[8,"HandlerFactory"],[3,"Client"],[3,"ServerBuilder"],[13,"Unimplemented"],[13,"Encode"],[13,"Decode"],[13,"Recv"],[13,"Other"],[3,"Endpoints"],[3,"NetworkCore"],[3,"EndInfo"],[3,"ServerCore"]]},\
"linearizability":{"doc":"","t":[3,13,3,3,4,6,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,5,12,5,12,0,0,11,12,12,11,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,5,12,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,6,13,16,8,13,3,6,13,16,13,16,4,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,12,10,11,12,11,11,11,11,12,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,3,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["CacheEntry","CallEntry","CallsEntry","Entry","EntryKind","LinkNode","LinkedNodes","Node","ReturnEntry","bitset","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_contains","check_events","check_events_timeout","check_operations","check_operations_timeout","check_single","convert_entries","entry","from","from","from","from","from","from","from_entries","head","head","id","id","into","into","into","into","into","into","kind","len","lift","linearized","make_entries","matched","model","models","new","next","prev","push_front","renumber","state","state","time","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unlift","value","value","wait_res","0","Bitset","bitset_index","borrow","borrow_mut","clear","clone","clone_into","equals","from","hash","into","new","popcnt","set","to_owned","try_from","try_into","type_id","CallEvent","Event","EventKind","Events","Input","Input","Model","None","Operation","Operations","Output","Output","ReturnEvent","State","Value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","equal","finish","fmt","fmt","from","from","from","from","id","init","input","input","into","into","into","into","kind","output","output","partition","partition_event","step","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","0","0","APPEND","GET","KvInput","KvModel","KvOutput","Op","PUT","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","from","from","from","from","init","into","into","into","into","key","op","partition","partition_event","step","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","value"],"q":["linearizability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linearizability::bitset","","","","","","","","","","","","","","","","","","","linearizability::model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","linearizability::model::Value","","linearizability::models","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"di":[0,1,0,0,0,0,0,0,1,0,1,2,3,4,5,6,1,2,3,4,5,6,0,0,0,0,0,0,0,6,1,2,3,4,5,6,3,3,3,2,4,1,2,3,4,5,6,2,3,0,5,0,4,0,0,3,4,4,3,0,5,6,2,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,0,2,4,0,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,0,0,0,9,10,0,9,0,0,9,10,8,10,0,8,11,9,12,8,11,9,12,12,12,12,10,12,9,12,8,11,9,12,11,10,9,12,8,11,9,12,11,9,12,10,10,10,12,8,11,9,12,8,11,9,12,8,11,9,12,11,13,14,15,15,0,0,0,0,15,15,16,17,18,15,16,17,18,15,16,17,18,15,16,17,18,18,15,16,17,15,16,17,18,18,15,16,17,18,16,16,18,18,18,15,16,17,18,15,16,17,18,15,16,17,18,15,16,17,18,16,17],"f":[null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hashmap",3],["cacheentry",3]],["bool",15]],[[["model",8],["events",6]],["bool",15]],[[["duration",3],["model",8],["events",6]],["bool",15]],[[["operations",6],["model",8]],["bool",15]],[[["operations",6],["model",8],["duration",3]],["bool",15]],[[["atomicbool",3],["arc",3,["atomicbool"]],["linkednodes",3,["value"]],["model",8],["value",4]],["bool",15]],[[["event",3],["vec",3,["event"]]],[["entry",3],["vec",3,["entry"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["entry",3],["vec",3,["entry"]]]],[[],[["option",4,["rc"]],["rc",3,["refcell"]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[["rc",3]]],null,[[["debug",8],["clone",8],["operations",6]],[["entry",3,["value"]],["vec",3,["entry"]]]],null,null,null,[[]],null,null,[[["refcell",3,["node"]],["rc",3,["refcell"]]]],[[["event",3],["vec",3,["event"]]],[["event",3],["vec",3,["event"]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["rc",3]]],null,null,[[["usize",15],["arc",3,["atomicbool"]],["receiver",3,["bool"]],["bool",15],["duration",3],["atomicbool",3]],["bool",15]],null,null,[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[],["bitset",3]],[[]],[[["bitset",3]],["bool",15]],[[]],[[],["u64",15]],[[]],[[["usize",15]]],[[],["usize",15]],[[["usize",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["operation",3]],[[]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[]],null,[[["operations",6]],[["operations",6],["vec",3,["operations"]]]],[[["events",6]],[["vec",3,["events"]],["events",6]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["op",4]],[[],["kvinput",3]],[[],["kvoutput",3]],[[],["kvmodel",3]],[[]],[[]],[[]],[[]],[[],["kvmodel",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["operations",6]],[["operations",6],["vec",3,["operations"]]]],[[["events",6]],[["vec",3,["events"]],["events",6]]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[4,"EntryKind"],[3,"Entry"],[3,"LinkedNodes"],[3,"Node"],[3,"CacheEntry"],[3,"CallsEntry"],[3,"Bitset"],[4,"EventKind"],[4,"Value"],[8,"Model"],[3,"Event"],[3,"Operation"],[13,"Input"],[13,"Output"],[4,"Op"],[3,"KvInput"],[3,"KvOutput"],[3,"KvModel"]]},\
"percolator":{"doc":"","t":[0,0,0,0,17,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,4,13,6,3,13,3,17,13,3,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,0,3,8,5,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,11,3,8,5,11,11,12,11,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11],"n":["client","msg","server","service","BACKOFF_TIME_MS","Client","RETRY_TIMES","begin","borrow","borrow_mut","clone","clone_into","commit","from","get","get_timestamp","into","new","set","to_owned","try_from","try_into","type_id","vzip","CommitRequest","CommitResponse","GetRequest","GetResponse","PrewriteRequest","PrewriteResponse","TimestampRequest","TimestampResponse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_primary","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","1","Column","Data","Key","KvTable","Lock","MemoryStorage","TTL","Timestamp","TimestampOracle","Value","Vector","Write","Write","back_off_maybe_clean_up_lock","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","commit","data","data","default","default","default","eq","erase","fmt","from","from","from","from","from","from","get","get_timestamp","into","into","into","into","into","into","lock","ne","prewrite","read","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write","write","0","0","timestamp","transaction","Client","Service","add_service","borrow","borrow_mut","client","clone","clone_into","from","get_timestamp","get_timestamp","into","new","spawn","to_owned","try_from","try_into","type_id","vzip","Client","Service","add_service","borrow","borrow_mut","client","clone","clone_into","commit","commit","from","get","get","into","new","prewrite","prewrite","spawn","to_owned","try_from","try_into","type_id","vzip"],"q":["percolator","","","","percolator::client","","","","","","","","","","","","","","","","","","","","percolator::msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","percolator::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","percolator::server::Value","","percolator::service","","percolator::service::timestamp","","","","","","","","","","","","","","","","","","","percolator::service::transaction","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Client mainly has two purposes: One is getting a …","","Begins a new transaction.","","","","","Commits a transaction.","","Gets the value for a given key.","Gets a timestamp from a TSO.","","Creates a new Client.","Sets keys in a buffer until commit time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,8,2,3,4,5,6,7,8,9,8,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,10,10,0,11,0,0,11,0,0,12,0,0,12,0,11,13,11,14,12,10,15,13,11,14,12,10,15,13,14,12,10,15,13,14,12,10,15,13,13,15,13,14,15,13,12,15,10,11,14,12,10,15,13,13,14,11,14,12,10,15,13,15,12,13,15,14,12,10,15,13,11,14,12,10,15,13,11,14,12,10,15,13,11,14,12,10,15,13,11,14,12,10,15,13,15,15,16,17,0,0,0,0,0,18,18,18,18,18,18,19,18,18,18,18,18,18,18,18,18,0,0,0,20,20,20,20,20,21,20,20,21,20,20,20,21,20,20,20,20,20,20,20],"f":[null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["client",3]],[[]],[[],[["result",6,["bool"]],["bool",15]]],[[]],[[["vec",3,["u8"]],["u8",15]],[["vec",3,["u8"]],["result",6,["vec"]]]],[[],[["u64",15],["result",6,["u64"]]]],[[]],[[["tsoclient",3],["transactionclient",3]],["client",3]],[[["vec",3,["u8"]],["u8",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["timestamprequest",3]],[[],["timestampresponse",3]],[[],["getrequest",3]],[[],["getresponse",3]],[[],["prewriterequest",3]],[[],["prewriteresponse",3]],[[],["commitrequest",3]],[[],["commitresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["timestamprequest",3]],["bool",15]],[[["timestampresponse",3]],["bool",15]],[[["getrequest",3]],["bool",15]],[[["getresponse",3]],["bool",15]],[[["prewriterequest",3]],["bool",15]],[[["prewriteresponse",3]],["bool",15]],[[["commitrequest",3]],["bool",15]],[[["commitresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["u32",15],["decodecontext",3]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["commitrequest",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15],["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["timestamporacle",3]],[[],["value",4]],[[],["write",3]],[[],["kvtable",3]],[[],["memorystorage",3]],[[]],[[]],[[]],[[]],[[]],[[["commitrequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],null,null,[[],["timestamporacle",3]],[[],["kvtable",3]],[[],["memorystorage",3]],[[["value",4]],["bool",15]],[[["u64",15],["u8",15],["column",4],["vec",3,["u8"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["getrequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["timestamprequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["value",4]],["bool",15]],[[["prewriterequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["u64",15],["u8",15],["column",4],["option",4,["u64"]],["vec",3,["u8"]]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["u8",15],["column",4],["value",4],["vec",3,["u8"]]]],null,null,null,null,null,null,null,[[["service",8],["serverbuilder",3]],["result",6]],[[]],[[]],null,[[],["client",3]],[[]],[[]],[[["timestamprequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["timestamprequest",3]],[["rpcfuture",6,["result"]],["result",6,["timestampresponse"]]]],[[]],[[["client",3]],["client",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[["service",8],["serverbuilder",3]],["result",6]],[[]],[[]],null,[[],["client",3]],[[]],[[["commitrequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["commitrequest",3]],[["rpcfuture",6,["result"]],["result",6,["commitresponse"]]]],[[]],[[["getrequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["getrequest",3]],[["result",6,["getresponse"]],["rpcfuture",6,["result"]]]],[[]],[[["client",3]],["client",3]],[[["prewriterequest",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["prewriterequest",3]],[["result",6,["prewriteresponse"]],["rpcfuture",6,["result"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Client"],[3,"TimestampRequest"],[3,"TimestampResponse"],[3,"GetRequest"],[3,"GetResponse"],[3,"PrewriteRequest"],[3,"PrewriteResponse"],[3,"CommitRequest"],[3,"CommitResponse"],[3,"Write"],[4,"Column"],[4,"Value"],[3,"MemoryStorage"],[3,"TimestampOracle"],[3,"KvTable"],[13,"Timestamp"],[13,"Vector"],[3,"Client"],[8,"Service"],[3,"Client"],[8,"Service"]]},\
"raft":{"doc":"","t":[6,3,12,11,11,11,11,11,11,0,0,0,11,11,11,11,0,0,0,3,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,12,11,11,12,11,11,11,11,4,13,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,6,13,3,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,11,12,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,13,13,3,3,4,13,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,3,8,5,11,11,12,11,11,11,11,11,10,11,11,11,11,11,11,11,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,8,5,10,11,11,11,12,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,13,4,13,13,4,13,13,3,3,13,13,6,13,3,4,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,12,11,0,12,11,11,11,12,12,11,11,11,11,11,11,0,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,3,11,11,11,11,11,11,10,11,11,10,11,10,11,10,11,11,12,11,11,11,11,13,13,13,3,3,3,3,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12],"n":["Executor","SHARED_EXECUTOR","__private_field","borrow","borrow_mut","deref","from","initialize","into","kvraft","proto","raft","try_from","try_into","type_id","vzip","client","errors","server","Clerk","append","append_async","borrow","borrow_mut","call","cycle_servers","fmt","from","get","get_async","id","into","last_leader","name","new","next_seq","next_seq","put","put_async","servers","try_from","try_into","type_id","vzip","Error","NoLeader","Raft","Result","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","into","ne","source","to_owned","to_string","try_from","try_into","type_id","vzip","0","Command","Get","KvServer","Node","Notifier","NotifyReply","PutAppend","apply","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","executor","fmt","from","from","from","from","get_state","into","into","into","into","is_leader","kill","kv","max_raft_state","max_seqs","me","new","new","notifiers","op","raft","sender","start","start_applier","store","term","term","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","value","kvraftpb","raftpb","Append","Get","KvReply","KvRequest","Op","Put","Unknown","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cid","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","err","fmt","fmt","fmt","from","from","from","from_i32","hash","into","into","into","is_valid","key","kv","merge_field","merge_field","ne","ne","op","op","partial_cmp","seq","set_op","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value","vzip","vzip","vzip","wrong_leader","Client","Service","add_service","borrow","borrow_mut","client","clone","clone_into","from","into","new","op","op","spawn","to_owned","try_from","try_into","type_id","vzip","AppendEntriesArgs","AppendEntriesReply","Entry","InstallSnapshotArgs","InstallSnapshotReply","RequestVoteArgs","RequestVoteReply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","candidate_id","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","conflict_index","data","data","default","default","default","default","default","default","default","deserialize","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","last_included_index","last_included_term","last_log_index","last_log_term","leader_commit_index","leader_id","leader_id","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","ne","ne","prev_log_index","prev_log_term","raft","serialize","success","term","term","term","term","term","term","term","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_granted","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Client","Service","add_service","append_entries","append_entries","borrow","borrow_mut","client","clone","clone_into","from","install_snapshot","install_snapshot","into","new","request_vote","request_vote","spawn","to_owned","try_from","try_into","type_id","vzip","AppendEntriesReply","ApplyMsg","Command","ElectionTimeout","Event","HeartBeat","InstallSnapshotReply","Node","Raft","RequestVoteReply","ResetTimeout","RpcResult","Snapshot","State","TimerAction","append_entries","append_entries_args","apply_tx","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_and_apply_up_to","cond_install_peer_snapshot","cond_install_snapshot","errors","event_loop_tx","event_loop_tx","event_loop_tx","executor","executor","fmt","fmt","fmt","from","from","from","from","from","get_state","handle_append_entries_reply","handle_append_entries_request","handle_election_timeout","handle_event","handle_heart_beat","handle_install_snapshot_reply","handle_install_snapshot_request","handle_request_vote_reply","handle_request_vote_request","heart_beat_sync_log","install_snapshot","install_snapshot","install_snapshot_args","into","into","into","into","into","is_leader","is_leader","kill","leader_try_commit","me","new","new","other_peers","p","peers","persist","persister","raft","request_vote","request_vote_args","reset_timeout","role","shutdown_tx","snapshot","start","start","start_event_loop","start_new_election","start_timer","states","term","term","timer_action_tx","timer_action_tx","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","turn","turn_candidate","turn_follower","turn_leader","type_id","type_id","type_id","type_id","type_id","update_term","v","vzip","vzip","vzip","vzip","vzip","command","index","index","snapshot","term","from","from","from","is_heart_beat","new_next_index","new_next_index","reply","reply","reply","Decode","Encode","Error","NotLeader","Result","Rpc","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","into","ne","source","to_owned","to_string","try_from","try_into","type_id","vzip","0","0","0","Persister","SimplePersister","borrow","borrow_mut","default","from","into","new","raft_state","raft_state","raft_state_size","save_raft_state","save_raft_state","save_state_and_snapshot","save_state_and_snapshot","snapshot","snapshot","snapshot_size","states","try_from","try_into","type_id","vzip","Candidate","Follower","Leader","Log","PersistentState","PersistentStateGuard","PersistentStateWrapper","RoleState","State","VolatileState","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_index","compact_to","current_term","data_at","default","deref","deref","deref_mut","deserialize","deserialize","do_persist","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get","in_snapshot_len","inner","inner","into","into","into","into","into","into","into","is_leader","is_leader","last_applied","last_index","last_term","log","new","new","new","new","next_index","offset_index","on_drop","persist","persister","pop_back","push","read","replace","serialize","serialize","snapshot_last_included_index","snapshot_last_included_term","snapshot_last_included_term","start_at","state","term","term","term_at","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voted_for","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","match_index","next_index","votes"],"q":["raft","","","","","","","","","","","","","","","","raft::kvraft","","","raft::kvraft::client","","","","","","","","","","","","","","","","","","","","","","","","","raft::kvraft::errors","","","","","","","","","","","","","","","","","","","","","raft::kvraft::errors::Error","raft::kvraft::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","raft::kvraft::server::NotifyReply","raft::proto","","raft::proto::kvraftpb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","raft::proto::kvraftpb::kv","","","","","","","","","","","","","","","","","","","raft::proto::raftpb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","raft::proto::raftpb::raft","","","","","","","","","","","","","","","","","","","","","","","raft::raft","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","raft::raft::ApplyMsg","","","","","raft::raft::Event","","","","","","","","","raft::raft::errors","","","","","","","","","","","","","","","","","","","","","","","raft::raft::errors::Error","","","raft::raft::persister","","","","","","","","","","","","","","","","","","","","","","","raft::raft::states","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","raft::raft::states::RoleState","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","fetch the current value for a key. returns “” if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether this peer believes it is the leader.","the tester calls kill() when a KVServer instance won’t …","","","","","","","","","","","","","","The current term of this peer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","You’ll have to add definitions here.","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>Op</code>, or <code>None</code> if <code>value</code> is not a valid …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Op</code>.","","","","","","","Returns the enum value of <code>op</code>, or the default if the field …","","","","Sets <code>op</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Your data here (2A, 2B).","Your data here (2A).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message sent to the service.","Ask service to apply this command.","","Event run by a Raft peer in a event loop.","","","Raft service which triggers event loop, timer and RPC …","A single Raft peer.","","","","Ask service to install this snapshot.","State of a raft peer (for testing).","Action for Raft peer to control the timer.","RPC service handler for <code>AppendEntries</code>.","Make arguments for <code>AppendEntries</code> RPC by the index where …","Apply commands to the application.","","","","","","","","","","","","","Update <code>commit_index</code> and commit (and apply) all log …","Service want Raft peer to conditionally install snapshot …","A service wants to switch to snapshot.  Only do so if …","","Get a ref to <code>event_loop_tx</code>.","Commit event to handle asynchronously, should always be …","Commit event to handle asynchronously, used by timer","Shared thread pool executor for background RPC requests.","Thread pool executor shared with inner Raft instance.","","","","","","","","","The current state of this peer.","Reply from our prior <code>AppendEntries</code> RPC request.","RPC request for <code>AppendEntries</code>.","Election timeout. Will turn to candidate and start new …","Entrypoint for handling event received from the event …","Heart beat. Sync log if we are leader.","Reply from our prior <code>InstallSnapshot</code> RPC request.","RPC request for <code>InstallSnapshot</code>.","Reply from our prior <code>RequestVote</code> RPC request.","RPC request for <code>RequestVote</code>.","Sync log by appending entries OR installing snapshot to …","Compact the log and set <code>commit_index</code> up to the last index …","RPC service handler for <code>InstallSnapshot</code>.","Make arguments for <code>InstallSnapshot</code> RPC.","","","","","","Whether this peer believes it is the leader.","","the tester calls kill() when a Raft instance won’t be …","Try to traverse leader’s <code>start_index</code>s to find new …","This peer’s index into peers[].","the service or tester wants to create a Raft server. the …","Create a new raft service.","Enumerated peers except <code>me</code>.","Persistent state: <code>current_form</code>, <code>voted_for</code>, <code>log</code>.","RPC end points of all peers.","save Raft’s persistent state to stable storage, where …","Support for Raft and kvraft to save persistent Raft state …","Inner Raft instance.","RPC service handler for <code>RequestVote</code>.","Make arguments for <code>RequestVote</code> RPC.","Tell timer to reset the election timeout.","Role of this peer with its specific states.","Notify the event loop to shutdown","the service says it has created a snapshot that has all …","The service using Raft (e.g. a k/v server) wants to start …","the service using Raft (e.g. a k/v server) wants to start …","Main event loop for the Raft state machine. Receive …","Start a new election by requesting votes from all other …","Timer task for the Raft state machine: election timeout …","","The current term of this peer.","","Get a ref to <code>timer_action_tx</code>.","Commit timer action to handle asynchronously, like to …","","","","","","","","","","","","Turn to new <code>role</code>.","Turn to candidate, with 1 votes from ourself.","Turn to follower.","Turn to leader, with reinitialized leader states.","","","","","","Update current term and clear <code>voted_for</code> state. WILL NOT …","Volatile state: <code>commit_index</code>, <code>last_applied</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the log of a Raft peer, with snapshot support.","Persistent state of a raft peer.","Write guard for wrapped <code>PersistentState</code>, will persisted …","Wrapper of <code>PersistentState</code> for persistence purpose.","Role of a peer with its specific states.","State of a raft peer (for testing).","Volatile state of a raft peer.","","","","","","","","","","","","","","","","","","Compact the log to the given index. This method is often …","","Get the data of the entry at given index.","","","","","","","Do persist using <code>persister</code>.","","","","","","","","","","restore previously persisted state.","","","","","","Get the ref to the entry at given index.","Length of entries in snapshot (i.e., not in <code>inner</code>).","","In memory log entries.","","","","","","","","Whether this peer believes it is the leader.","","","Index of the last entry.","Term of the last entry.","","","Creates an empty log.","","","Index of the next entry slot.","Convert an absolute index into <code>inner</code>’s index","","save Raft’s persistent state to stable storage, where …","Object to serialize and deserialize this peer’s …","Pop the last entry in log.","Push an entry to the log.","Get a immutable reference to the state.","","","","Index of the last entry in snapshot.","Term of the last entry in snapshot.","Term of the last entry in snapshot.","Get an iterator of log starting at the given index.","The inner state.","The current term of this peer.","","Get the term of the entry at given index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Acquire a write guard for wrapped <code>PersistentState</code>, and …","","","Received votes from peers."],"i":[0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,0,5,0,0,0,0,5,6,7,6,5,8,7,6,5,8,5,8,5,8,8,5,7,6,5,8,8,7,6,5,8,8,8,8,6,6,6,6,8,6,8,6,7,6,8,6,8,7,5,8,7,6,5,8,7,6,5,8,7,6,5,8,7,6,5,8,9,0,0,10,10,0,0,0,10,10,11,12,10,11,12,10,11,11,12,11,12,10,11,12,10,10,11,12,10,11,12,11,12,11,12,10,12,11,12,10,11,12,10,10,10,11,12,10,10,11,0,11,12,11,12,11,11,10,11,11,11,12,10,11,12,10,11,12,10,11,12,10,11,12,11,12,10,12,0,0,0,13,13,13,13,13,13,13,13,14,13,13,13,13,13,13,13,0,0,0,0,0,0,0,15,16,17,18,19,20,21,15,16,17,18,19,20,21,16,15,16,17,18,19,20,21,15,16,17,18,19,20,21,15,16,17,18,19,20,21,19,15,20,15,16,17,18,19,20,21,15,15,16,17,18,19,20,21,15,16,17,18,19,20,21,18,15,16,17,18,19,20,21,15,16,17,18,19,20,21,15,16,17,18,19,20,21,15,16,17,18,19,20,21,20,20,16,16,18,18,20,15,16,17,18,19,20,21,15,16,17,18,19,20,21,18,18,0,15,19,15,16,17,18,19,20,21,15,16,17,18,19,20,21,15,16,17,18,19,20,21,15,16,17,18,19,20,21,15,16,17,18,19,20,21,17,15,16,17,18,19,20,21,0,0,0,22,23,23,23,23,23,23,23,22,23,23,23,22,23,23,23,23,23,23,23,24,0,25,24,0,24,24,0,0,24,26,0,25,0,0,27,28,28,28,25,24,26,27,28,25,24,26,27,27,27,28,28,27,0,28,28,27,28,27,25,24,26,28,25,24,26,27,27,28,28,28,28,28,28,28,28,28,28,28,27,28,28,25,24,26,27,27,29,27,28,28,28,27,28,28,28,28,0,27,27,28,28,28,27,27,28,27,27,28,27,0,27,29,28,28,27,28,25,24,26,27,28,25,24,26,27,28,28,28,28,28,25,24,26,27,28,28,28,25,24,26,27,30,30,31,31,31,32,33,34,33,33,34,32,33,34,35,35,0,35,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,37,38,0,0,39,39,39,39,39,39,40,39,39,40,39,40,39,40,39,39,39,39,39,39,39,41,41,41,0,0,0,0,0,0,0,42,43,29,41,44,45,46,42,43,29,41,44,45,46,29,29,46,44,45,44,29,42,43,42,44,45,43,42,29,41,41,44,45,46,42,43,43,29,41,44,45,46,44,44,42,44,42,43,29,41,44,45,46,29,29,46,44,44,45,42,44,45,46,44,44,42,43,43,44,44,43,44,44,45,44,44,44,44,43,29,29,44,29,41,42,43,29,41,44,45,46,42,43,29,41,44,45,46,42,43,29,41,44,45,46,45,42,43,29,41,44,45,46,43,47,47,48],"f":[null,null,null,[[]],[[]],[[],["executor",6]],[[]],[[]],[[]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[["string",3]]],[[["string",3]]],[[]],[[]],[[["kvrequest",3]]],[[]],[[["formatter",3]],["result",6]],[[]],[[["string",3]],["string",3]],[[["string",3]]],null,[[]],null,null,[[["vec",3,["kvclient"]],["string",3],["kvclient",3]],["clerk",3]],[[],["u64",15]],null,[[["string",3]]],[[["string",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",4]],["bool",15]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[["applymsg",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["notifyreply",4]],[[],["node",3]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["state",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],null,null,null,null,[[["usize",15],["vec",3,["raftclient"]],["persister",8],["box",3,["persister"]],["raftclient",3],["option",4,["usize"]]]],[[["applymsg",4],["kvserver",3],["unboundedreceiver",3,["applymsg"]]],["node",3]],null,[[["kvrequest",3]],[["box",3,["future"]],["pin",3,["box"]]]],null,null,[[["kvrequest",3]],[["result",6,["receiver"]],["receiver",3,["notifyreply"]]]],[[["applymsg",4],["unboundedreceiver",3,["applymsg"]]]],null,[[],["u64",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["kvrequest",3]],[[],["kvreply",3]],[[],["op",4]],[[]],[[]],[[]],[[["op",4]],["ordering",4]],[[]],[[]],[[],["op",4]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["kvrequest",3]],["bool",15]],[[["kvreply",3]],["bool",15]],[[["op",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i32",15]],[["option",4,["op"]],["op",4]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],null,null,[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["kvrequest",3]],["bool",15]],[[["kvreply",3]],["bool",15]],[[],["op",4]],null,[[["op",4]],[["ordering",4],["option",4,["ordering"]]]],null,[[["op",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,null,null,[[["serverbuilder",3],["service",8]],["result",6]],[[]],[[]],null,[[],["client",3]],[[]],[[]],[[]],[[["client",3]],["client",3]],[[["kvrequest",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["kvrequest",3]],[["result",6,["kvreply"]],["rpcfuture",6,["result"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["entry",3]],[[],["requestvoteargs",3]],[[],["requestvotereply",3]],[[],["appendentriesargs",3]],[[],["appendentriesreply",3]],[[],["installsnapshotargs",3]],[[],["installsnapshotreply",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[["entry",3]],["bool",15]],[[["requestvoteargs",3]],["bool",15]],[[["requestvotereply",3]],["bool",15]],[[["appendentriesargs",3]],["bool",15]],[[["appendentriesreply",3]],["bool",15]],[[["installsnapshotargs",3]],["bool",15]],[[["installsnapshotreply",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["wiretype",4],["decodecontext",3],["u32",15]],[["decodeerror",3],["result",4,["decodeerror"]]]],[[["entry",3]],["bool",15]],[[["requestvoteargs",3]],["bool",15]],[[["requestvotereply",3]],["bool",15]],[[["appendentriesargs",3]],["bool",15]],[[["appendentriesreply",3]],["bool",15]],[[["installsnapshotargs",3]],["bool",15]],[[["installsnapshotreply",3]],["bool",15]],null,null,null,[[],["result",4]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["service",8],["serverbuilder",3]],["result",6]],[[["appendentriesargs",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["appendentriesargs",3]],[["result",6,["appendentriesreply"]],["rpcfuture",6,["result"]]]],[[]],[[]],null,[[],["client",3]],[[]],[[]],[[["installsnapshotargs",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["installsnapshotargs",3]],[["result",6,["installsnapshotreply"]],["rpcfuture",6,["result"]]]],[[]],[[["client",3]],["client",3]],[[["requestvoteargs",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[["requestvoteargs",3]],[["rpcfuture",6,["result"]],["result",6,["requestvotereply"]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["appendentriesargs",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[["usize",15]],[["appendentriesargs",3],["option",4,["appendentriesargs"]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["node",3]],[[]],[[["usize",15]]],[[["u64",15],["usize",15],["u8",15],["vec",3,["u8"]]],["bool",15]],[[["u64",15],["vec",3,["u8"]],["u8",15]],["bool",15]],null,[[],["unboundedsender",3]],null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["state",3]],[[["usize",15],["result",6,["appendentriesreply"]],["appendentriesreply",3]]],[[["appendentriesargs",3]],[["result",6,["appendentriesreply"]],["appendentriesreply",3]]],[[]],[[["event",4]]],[[]],[[["usize",15],["result",6,["installsnapshotreply"]],["installsnapshotreply",3]]],[[["installsnapshotargs",3]],[["result",6,["installsnapshotreply"]],["installsnapshotreply",3]]],[[["usize",15],["result",6,["requestvotereply"]],["requestvotereply",3]]],[[["requestvoteargs",3]],[["result",6,["requestvotereply"]],["requestvotereply",3]]],[[]],[[["usize",15],["u64",15],["u8",15],["bool",15],["vec",3,["u8"]]],["bool",15]],[[["installsnapshotargs",3]],[["pin",3,["box"]],["box",3,["future"]]]],[[],["installsnapshotargs",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[]],[[]],null,[[["raftclient",3],["usize",15],["persister",8],["box",3,["persister"]],["unboundedsender",3,["applymsg"]],["vec",3,["raftclient"]],["applymsg",4]],["raft",3]],[[["raft",3]],["node",3]],[[]],null,null,[[["option",4,["vec"]],["vec",3,["u8"]]]],null,null,[[["requestvoteargs",3]],[["box",3,["future"]],["pin",3,["box"]]]],[[],["requestvoteargs",3]],[[]],null,null,[[["u64",15],["vec",3,["u8"]],["u8",15]]],[[],["result",6]],[[],["result",6]],[[["unboundedreceiver",3,["event"]],["receiver",3],["event",4]]],[[]],[[["unboundedreceiver",3,["timeraction"]],["timeraction",4]]],null,[[],["u64",15]],null,[[],["unboundedsender",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["rolestate",4]]],[[]],[[]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["error",4]],[[]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",4]],["bool",15]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[],["simplepersister",3]],[[]],[[]],[[],["simplepersister",3]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["usize",15]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["usize",15]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["state",3]],[[]],null,[[["usize",15],["u64",15]],["bool",15]],null,[[["usize",15]],[["option",4,["vec"]],["vec",3]]],[[],["state",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["option",4,["vec"]],["vec",3,["u8"]],["persistentstate",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["persister",8],["box",3,["persister"]]]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],[["option",4,["entry"]],["entry",3]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,null,[[],["usize",15]],[[],["u64",15]],null,[[["persistentstate",3],["arc",3,["persister"]],["persister",8]]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]],[["option",4,["usize"]],["usize",15]]],null,[[["option",4,["vec"]],["vec",3,["u8"]]]],null,[[],[["option",4,["entry"]],["entry",3]]],[[["entry",3]]],[[],["persistentstate",3]],[[["usize",15],["entry",3]],[["option",4,["entry"]],["entry",3]]],[[],["result",4]],[[],["result",4]],[[],["usize",15]],[[],["u64",15]],null,[[["usize",15]],["option",4]],null,[[],["u64",15]],null,[[["usize",15]],[["u64",15],["option",4,["u64"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["persistentstateguard",3]],null,null,null],"p":[[3,"SHARED_EXECUTOR"],[3,"Clerk"],[4,"Error"],[13,"Raft"],[4,"NotifyReply"],[3,"KvServer"],[3,"Notifier"],[3,"Node"],[13,"Get"],[4,"Op"],[3,"KvRequest"],[3,"KvReply"],[3,"Client"],[8,"Service"],[3,"Entry"],[3,"RequestVoteArgs"],[3,"RequestVoteReply"],[3,"AppendEntriesArgs"],[3,"AppendEntriesReply"],[3,"InstallSnapshotArgs"],[3,"InstallSnapshotReply"],[8,"Service"],[3,"Client"],[4,"Event"],[4,"ApplyMsg"],[4,"TimerAction"],[3,"Node"],[3,"Raft"],[3,"State"],[13,"Command"],[13,"Snapshot"],[13,"RequestVoteReply"],[13,"AppendEntriesReply"],[13,"InstallSnapshotReply"],[4,"Error"],[13,"Encode"],[13,"Decode"],[13,"Rpc"],[3,"SimplePersister"],[8,"Persister"],[4,"RoleState"],[3,"PersistentStateGuard"],[3,"PersistentStateWrapper"],[3,"Log"],[3,"PersistentState"],[3,"VolatileState"],[13,"Leader"],[13,"Candidate"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};